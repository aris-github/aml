declare namespace uuid = 'java.util.UUID';
import module namespace caex215 = "http://ipr.kit.edu/caex" at "src/main/resources/caex.xqy";
let $root := doc("src/test/resources/data.aml")/CAEXFile
return
(
	<InstanceHierarchy Name="RobotCell">
	{
		for $n1 in $root/InstanceHierarchy[descendant-or-self::InternalElement[RoleRequirements[@RefBaseRoleClassPath="AutomationMLDMIRoleClassLib/DiscManufacturingEquipment/Robot"] and Attribute[@Name="Frame" and Attribute[@Name="x"] and Attribute[@Name="y"] and Attribute[@Name="z"] and Attribute[@Name="rx"] and Attribute[@Name="ry"] and Attribute[@Name="rz"]]]]/descendant-or-self::InternalElement[RoleRequirements[@RefBaseRoleClassPath="AutomationMLDMIRoleClassLib/DiscManufacturingEquipment/Robot"] and Attribute[@Name="Frame" and Attribute[@Name="x"] and Attribute[@Name="y"] and Attribute[@Name="z"] and Attribute[@Name="rx"] and Attribute[@Name="ry"] and Attribute[@Name="rz"]]]
		return
		(
			element{node-name($n1)}
			{
				$n1/@*,
				for $n2 in $n1/node()
				return
				(
					if ($n2[self::Attribute[@Name="Frame" and Attribute[@Name="x"] and Attribute[@Name="y"] and Attribute[@Name="z"] and Attribute[@Name="rx"] and Attribute[@Name="ry"] and Attribute[@Name="rz"]]])
					then
					(
						element{node-name($n2)}
						{
							$n2/@*[not(name(.)="Name")],
							attribute{"Name"}{"Coordinates"},
							for $n3 in $n2/node()
							return
							(
								if ($n3[self::Attribute[@Name="z"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"tz"},
										for $n10 in $n3/node()
										return
										(
											caex215:copy($n10)
										)
									}
								)
								else
								(
								)
								,
								if ($n3[self::Attribute[@Name="rx"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"rx"},
										for $n11 in $n3/node()
										return
										(
											caex215:copy($n11)
										)
									}
								)
								else
								(
								)
								,
								if ($n3[self::Attribute[@Name="ry"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"ry"},
										for $n12 in $n3/node()
										return
										(
											caex215:copy($n12)
										)
									}
								)
								else
								(
								)
								,
								if ($n3[self::Attribute[@Name="rz"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"rz"},
										for $n13 in $n3/node()
										return
										(
											caex215:copy($n13)
										)
									}
								)
								else
								(
								)
								,
								if ($n3[self::Attribute[@Name="x"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"tx"},
										for $n14 in $n3/node()
										return
										(
											caex215:copy($n14)
										)
									}
								)
								else
								(
								)
								,
								if ($n3[self::Attribute[@Name="y"]])
								then
								(
									element{node-name($n3)}
									{
										$n3/@*[not(name(.)="Name")],
										attribute{"Name"}{"ty"},
										for $n15 in $n3/node()
										return
										(
											caex215:copy($n15)
										)
									}
								)
								else
								(
								)
							)
						}
					)
					else
					(
						caex215:copy($n2)
					)
				)
			}
		)
	}
	</InstanceHierarchy>
)
